name: "Build, Deploy and Sync to Qiniu"
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - .gitignore
      - README.md
      - LICENSE

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # submodules: true
          # If using the 'assets' git submodule from Chirpy Starter, uncomment above
          # (See: https://github.com/cotes2020/chirpy-starter/tree/main/assets)

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: true

      - name: Build site
        run: bundle exec jekyll b -d "_site${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: "production"

      - name: Test site
        run: |
          bundle exec htmlproofer _site \
            \-\-disable-external \
            \-\-ignore-urls "/^http:\/\/127.0.0.1/,/^http:\/\/0.0.0.0/,/^http:\/\/localhost/"

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site${{ steps.pages.outputs.base_path }}"

      - name: Prepare for Qiniu Sync
        run: |
          mkdir -p qiniu_sync
          cp -r "_site${{ steps.pages.outputs.base_path }}"/* qiniu_sync/

      - name: Upload artifact for Qiniu Sync
        uses: actions/upload-artifact@v4
        with:
          name: qiniu-sync-files
          path: qiniu_sync/
          retention-days: 1

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  sync-to-qiniu:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: qiniu-sync-files
          path: qiniu_sync

      - name: Configure Qiniu CLI
        run: |
          wget "https://github.com/qiniu/qshell/releases/download/v2.16.0/qshell-v2.16.0-linux-amd64.tar.gz" -O qshell.tar.gz
          tar -xzf qshell.tar.gz
          mv qshell-v2.16.0-linux-amd64/qshell ./qshell
          chmod +x qshell
          ./qshell account ${{ secrets.QINIU_ACCESS_KEY }} ${{ secrets.QINIU_SECRET_KEY }} qiniu

      - name: Sync to Qiniu
        run: |
          # 使用七牛云的qshell工具同步文件
          ./qshell qupload2 \
            --src-dir=qiniu_sync \
            --bucket=${{ secrets.QINIU_BUCKET_NAME }} \
            --overwrite=true \
            --check-exists=true \
            --check-hash=true \
            --rescan-local=true
        env:
          QINIU_ACCESS_KEY: ${{ secrets.QINIU_ACCESS_KEY }}
          QINIU_SECRET_KEY: ${{ secrets.QINIU_SECRET_KEY }}
